Train Begin...
Episodes:   0%|                                                  | 0/1000 [00:00<?, ?it/s]/home/js/DAA_CPS/Agent.py:102: UserWarning: Using a target size (torch.Size([64])) that is different to the input size (torch.Size([960])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  self.loss = F.smooth_l1_loss(current_q.squeeze(), target_q)    | 0/3600 [00:00<?, ?it/s]
(5, 3)
(10, 3)
(18, 92)
(75, 3)
(95, 3)
(55, 3)
(98, 19)
(85, 3)
(46, 77)
(43, 77)
(4, 82)
(1, 33)
(28, 98)
(18, 89)
(66, 62)
Episodes:   0%|                                                  | 0/1000 [00:00<?, ?it/s]
Traceback (most recent call last):                                                        
  File "/home/js/DAA_CPS/train.py", line 111, in <module>
    train(config)
  File "/home/js/DAA_CPS/train.py", line 71, in train
    agent.replay(batch_size)
  File "/home/js/DAA_CPS/Agent.py", line 102, in replay
    self.loss = F.smooth_l1_loss(current_q.squeeze(), target_q)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/js/anaconda3/envs/DAA_CPS/lib/python3.12/site-packages/torch/nn/functional.py", line 3684, in smooth_l1_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/js/anaconda3/envs/DAA_CPS/lib/python3.12/site-packages/torch/functional.py", line 76, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: The size of tensor a (960) must match the size of tensor b (64) at non-singleton dimension 0
