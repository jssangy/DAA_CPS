Train Begin...
Episodes:   0%|                                                  | 0/1000 [00:00<?, ?it/s]
Episode 0:   0%|                                                 | 0/3600 [00:00<?, ?it/s]
tensor([[ 1.6882e+02,  2.4390e+01,  6.2602e+02],
        [-1.0536e+02, -4.5341e+02,  4.9909e+02],
        [ 2.3458e+02,  1.8325e+02,  6.3220e+02],
        [-1.5536e+02,  4.2480e+01,  5.4564e+02],
        [-2.2360e+02, -5.7045e+02,  5.4749e+02],
        [-2.7847e+02, -5.2651e+02,  4.4328e+02],
        [-1.6292e+02, -4.6956e+02,  5.2243e+02],
        [ 6.3510e+01, -1.0367e+02,  4.5033e+02],
        [ 9.3763e+01, -1.2171e+02,  4.8474e+02],
        [-2.3885e+02, -5.2716e+02,  4.7284e+02],
        [ 1.7091e+02,  4.6551e+01,  6.1834e+02],
        [-1.5094e+02,  3.6565e+01,  5.6374e+02],
        [ 5.8621e+01, -8.3421e+01,  5.1195e+02],
        [-1.1473e+02, -3.6340e+02,  7.1215e+02],
        [ 1.3226e+02,  9.5989e+01,  6.5040e+02],
        [ 1.1463e+02,  1.9404e+01,  4.3691e+02],
        [ 9.4718e+01, -1.2273e+02,  4.8614e+02],
        [-2.1712e+02, -4.1433e+01,  7.1603e+02],
        [-1.3004e+02, -9.4287e+00,  4.8541e+02],
        [-1.8023e+02, -4.8212e+02,  5.2732e+02],
        [ 1.5899e+02, -1.1892e+01,  6.6256e+02],
        [-2.5833e+02, -5.9379e+02,  4.4502e+02],
        [-1.4993e+02, -3.7200e+02,  6.9379e+02],
        [ 4.6118e+01, -8.7710e+01,  4.9275e+02],
        [ 1.7062e+02,  1.6426e+01,  6.5331e+02],
        [ 1.0601e+02, -1.0977e+02,  5.6344e+02],
        [ 1.4888e+02,  2.8711e+01,  6.1695e+02],
        [ 1.5813e+02,  1.2617e+00,  6.5746e+02],
        [-8.5579e+01, -1.2013e+02,  3.7224e+02],
        [-2.2198e+02, -6.2035e+01,  7.2804e+02],
        [ 1.6099e+02,  8.8969e+01,  6.5956e+02],
        [-7.3592e+01,  3.1846e+01,  1.9477e+02],
        [-1.5256e+02, -3.8128e+02,  6.2216e+02],
        [-1.5824e+02, -4.7512e+02,  5.2591e+02],
        [-1.6055e+02, -4.4652e+02,  6.2061e+02],
        [ 1.6865e+02,  2.5094e+01,  6.5043e+02],
        [ 3.8298e+01, -9.4971e+01,  4.8704e+02],
        [-1.5300e+02,  3.7481e+01,  5.5045e+02],
        [-3.2326e+01, -3.5037e+02,  3.8613e+02],
        [ 1.7055e+02,  1.5809e+01,  6.5684e+02],
        [ 3.3809e+01, -3.4725e+01,  4.3340e+02],
        [-2.8842e+02, -5.3442e+02,  4.4340e+02],
        [-1.5968e+02, -3.9055e+02,  6.1577e+02],
        [-1.8570e+02, -5.3603e+02,  5.8098e+02],
        [ 2.5337e+02,  8.7149e+01,  4.5423e+02],
        [ 3.0240e+01, -4.0823e+01,  4.3684e+02],
        [ 1.2521e+02, -9.5414e+01,  5.4530e+02],
        [ 3.0967e+02,  1.8731e+02,  6.0162e+02],
        [-1.6759e+02, -1.9595e+02,  6.9715e+02],
        [ 1.4547e+02,  1.1088e+02,  6.6137e+02],
        [-1.1233e+02, -4.7756e+02,  5.0022e+02],
        [-1.5205e+02,  3.3174e+01,  5.5200e+02],
        [-3.6032e+01, -3.1854e+02,  3.6787e+02],
        [-1.9167e+02, -5.9034e+02,  4.6081e+02],
        [-3.4977e+01, -1.1824e+02,  4.8082e+02],
        [ 1.6612e+02,  1.6007e+01,  6.5043e+02],
        [ 1.6983e+02,  1.4357e+01,  6.6374e+02],
        [-1.8180e+02, -5.8859e+02,  5.3499e+02],
        [ 1.7047e+02,  1.5165e+01,  6.6034e+02],
        [-1.2571e+02,  3.8517e+01,  6.0092e+02],
        [ 1.6366e+02,  1.1376e+02,  6.7676e+02],
        [ 1.6291e+02,  3.5037e-01,  6.5213e+02],
        [ 1.9571e+02, -1.0351e+02,  5.4822e+02],
        [ 1.9357e+02, -3.4282e+01,  6.4249e+02]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
tensor([[0, 0, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 2],
        [2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0],
        [2, 2, 2, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 0, 0],
        [2, 2, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0],
        [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0],
        [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0],
        [0, 2, 2, 0, 0, 0, 2, 0, 0, 2, 0, 2, 2, 0, 0],
        [2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0],
        [0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0],
        [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0],
        [2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0],
        [0, 0, 2, 2, 0, 2, 2, 2, 0, 2, 0, 2, 0, 0, 2],
        [0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2, 0],
        [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
        [2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
        [2, 0, 2, 2, 0, 0, 2, 2, 0, 0, 0, 0, 2, 0, 0],
        [2, 2, 2, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0],
        [0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0],
        [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2],
        [2, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0],
        [2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 0, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0],
        [0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 2, 0, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0],
        [0, 0, 2, 0, 2, 2, 2, 2, 0, 0, 0, 2, 2, 0, 2],
        [2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0],
        [0, 2, 0, 0, 2, 0, 0, 0, 2, 0, 2, 2, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0],
        [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0],
        [2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2],
        [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0],
        [0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
        [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
        [2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0],
        [2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0],
        [2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
        [2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 0, 0, 2],
        [0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 2, 0, 0],
        [0, 2, 2, 0, 2, 0, 0, 0, 2, 2, 0, 0, 2, 0, 0],
        [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
        [2, 0, 2, 0, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 2],
        [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0],
        [2, 2, 2, 2, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0],
        [2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
        [2, 2, 2, 2, 2, 0, 0, 0, 2, 0, 2, 0, 2, 0, 0],
        [2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0],
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 0, 0, 0, 2, 2, 0, 0, 0, 0, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0],
        [2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
        [2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0]], device='cuda:0')
Episodes:   0%|                                                  | 0/1000 [00:00<?, ?it/s]
Traceback (most recent call last):                                                        
  File "/home/js/DAA_CPS/train.py", line 111, in <module>
    train(config)
  File "/home/js/DAA_CPS/train.py", line 71, in train
    agent.replay(batch_size)
  File "/home/js/DAA_CPS/Agent.py", line 104, in replay
    self.loss = F.smooth_l1_loss(current_q.squeeze(), target_q)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/js/anaconda3/envs/DAA_CPS/lib/python3.12/site-packages/torch/nn/functional.py", line 3684, in smooth_l1_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/js/anaconda3/envs/DAA_CPS/lib/python3.12/site-packages/torch/functional.py", line 76, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: The size of tensor a (960) must match the size of tensor b (64) at non-singleton dimension 0
